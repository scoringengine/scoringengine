#!/usr/bin/env python

from random import randint

from scoring_engine.models.team import Team
from scoring_engine.models.user import User
from scoring_engine.models.service import Service
from scoring_engine.models.account import Account
from scoring_engine.models.environment import Environment
from scoring_engine.models.property import Property
from scoring_engine.models.round import Round
from scoring_engine.models.check import Check
from scoring_engine.db import DB

print("Setting up DB")
db = DB()
db.connect()
db.destroy()
db.setup()


services = []

print("Creating models and writing them to DB")
num_teams = 6
num_services = randint(5, 8)
num_accounts = randint(2, 4)
num_environments = randint(2, 4)
num_properties = randint(2, 4)
num_rounds = randint(20, 50)
print("\tNum Blue Teams: " + str(num_teams))
print("\tNum Services: " + str(num_services))
print("\tNum Accounts: " + str(num_accounts))
print("\tNum Environments: " + str(num_environments))
print("\tNum Properties: " + str(num_properties))
print("\tNum Rounds: " + str(num_rounds))
print()

print("Creating White Team")
white_team = Team(name="White Team", color="White")
db.save(white_team)
user = User(username="whiteteamuser", password="testpass", team=white_team)
db.save(user)

print("Creating Red Team")
red_team = Team(name="Red Team", color="Red")
db.save(red_team)
user = User(username="redteamuser", password="testpass", team=red_team)
db.save(user)

print("Creating Blue Teams and Services")
for num in range(1, num_teams + 1):

    print("\tCreating Team " + str(num))
    team = Team(name="Team" + str(num), color="Blue")
    db.save(team)

    for user_num in range(1, randint(3, 5) + 1):
        username = "team" + str(num) + "user" + str(user_num)
        print("\t\tCreating User " + username)
        user = User(username=username, password="testpass", team=team)
        db.save(user)

    for service_num in range(1, num_services + 1):
        print("\t\t\tCreating Service " + str(service_num))
        ip = '129.21.%s.%s' % (randint(0, 255), randint(0, 255))
        service = Service(name="ICMP IPv4 " + str(service_num), team=team, check_name="ICMP IPv4 Check", ip_address=ip)
        db.save(service)
        services.append(service)

        for account_num in range(1, num_accounts + 1):
            print("\t\t\t\tCreating Account " + str(account_num))
            account = Account(username='testuser' + str(account_num), password='catdog', service=service)
            db.save(account)

        for environment_num in range(1, num_environments + 1):
            print("\t\t\t\tCreating Environment " + str(environment_num))
            environment = Environment(matching_regex='*', service=service)
            db.save(environment)

            for property_num in range(1, num_properties + 1):
                print("\t\t\t\t\tCreating Property " + str(property_num))
                property_obj = Property(name="prop" + str(property_num), value="randval" + str(property_num), environment=environment, visible=True)
                db.save(property_obj)


print("Creating " + str(num_rounds) + " rounds")
for num_round in range(1, num_rounds + 1):
    print("\tCreating round " + str(num_round))
    round_obj = Round(number=num_round)
    for service in services:
        print("\t\tCreating check for " + str(service.id))
        rand_result = randint(0, 1)
        if rand_result == 1:
            result = True
        else:
            result = False

        check = Check(round=round_obj, service=service)
        check.finished(result, 'example output')
        db.save(check)
