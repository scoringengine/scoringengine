#!/usr/bin/env python

from random import randint

from scoring_engine.models.team import Team
from scoring_engine.models.user import User
from scoring_engine.models.service import Service
from scoring_engine.models.account import Account
from scoring_engine.models.environment import Environment
from scoring_engine.models.property import Property
from scoring_engine.models.round import Round
from scoring_engine.models.check import Check
from scoring_engine.db import DB

print("Setting up DB")
db = DB()
db.connect()
db.destroy()
db.setup()

useragents = [
    'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36',
    'Opera/9.80 (Windows NT 6.2; Win64; x64) Presto/2.12 Version/12.16',
    'Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko',
    'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)',
    'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)',
    'Mozilla/5.0 (Macintosh; Intel Mac OS X 1094) AppleWebKit/537.77.4 (KHTML like Gecko) Version/7.0.5 Safari/537.77.4',
    'Mozilla/5.0 (Macintosh; Intel Mac OS X 1094) AppleWebKit/537.78.2 (KHTML like Gecko) Version/7.0.6 Safari/537.78.2',
    'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0',
    'Mozilla/5.0 (Macintosh; Intel Mac OS X 1010) AppleWebKit/600.1.8 (KHTML like Gecko) Version/8.0 Safari/600.1.8',
    'Mozilla/5.0 (Macintosh; Intel Mac OS X 1068) AppleWebKit/534.59.10 (KHTML like Gecko) Version/5.1.9 Safari/534.59.10',
]

services = []

print("Creating models and writing them to DB")
num_teams = 6
num_services = randint(5, 8)
num_accounts = randint(2, 4)
num_environments = randint(2, 4)
num_properties = randint(2, 4)
num_rounds = randint(20, 50)
print("\tNum Blue Teams: " + str(num_teams))
print("\tNum Services: " + str(num_services))
print("\tNum Accounts: " + str(num_accounts))
print("\tNum Environments: " + str(num_environments))
print("\tNum Properties: " + str(num_properties))
print("\tNum Rounds: " + str(num_rounds))
print()

print("Creating White Team")
white_team = Team(name="White Team", color="White")
db.save(white_team)
user = User(username="whiteteamuser", password="testpass", team=white_team)
db.save(user)

print("Creating Red Team")
red_team = Team(name="Red Team", color="Red")
db.save(red_team)
user = User(username="redteamuser", password="testpass", team=red_team)
db.save(user)

print("Creating Blue Teams and Services")
for num in range(1, num_teams + 1):

    print("\tCreating Team " + str(num))
    team = Team(name="Team" + str(num), color="Blue")
    db.save(team)

    for user_num in range(1, randint(3, 5) + 1):
        username = "team" + str(num) + "user" + str(user_num)
        print("\t\tCreating User " + username)
        user = User(username=username, password="testpass", team=team)
        db.save(user)

    print("\t\tCreating ICMP Service")
    service = Service(name="ICMP", team=team, check_name="ICMPCheck", ip_address="127.0.0.1")
    db.save(Environment(service=service, matching_regex=' bytes from '))
    db.save(service)
    services.append(service)

    print("\t\tCreating DNS Service")
    service = Service(name="DNS", team=team, check_name="DNSCheck", ip_address="127.0.0.1")
    environment = Environment(service=service, matching_regex='status: NOERROR')
    db.save(environment)
    db.save(Property(environment=environment, name='qtype', value='A'))
    db.save(Property(environment=environment, name='domain', value='www.domain.com'))
    environment_quad = Environment(service=service, matching_regex='status: NOERROR')
    db.save(environment_quad)
    db.save(Property(environment=environment_quad, name='qtype', value='AAAA'))
    db.save(Property(environment=environment_quad, name='domain', value='www.domain.com'))
    db.save(service)
    services.append(service)

    print("\t\tCreating FTP Download Service")
    service = Service(name='FTPDownload', team=team, check_name='FTPDownloadCheck', ip_address='127.0.0.1')
    db.save(Account(username='techy', password='techy', service=service))
    db.save(Account(username='pwnbus', password='redfred', service=service))
    db.save(Account(username='rusty', password='catdog', service=service))
    environment = Environment(service=service, matching_regex='> USER')
    db.save(Property(environment=environment, name='filename', value='foo.txt'))
    db.save(service)
    db.save(environment)
    services.append(service)

    print("\t\tCreating FTP Upload Service")
    service = Service(name='FTPUpload', team=team, check_name='FTPUploadCheck', ip_address='127.0.0.1')
    db.save(Account(username='techy', password='techy', service=service))
    db.save(Account(username='pwnbus', password='redfred', service=service))
    db.save(Account(username='rusty', password='catdog', service=service))
    environment = Environment(service=service, matching_regex='> STOR foo.txt')
    db.save(Property(environment=environment, name='filename', value='foo.txt'))
    db.save(service)
    db.save(environment)
    services.append(service)

    print("\t\tCreating HTTP Service")
    service = Service(name='HTTP', team=team, check_name='HTTPCheck', ip_address='127.0.0.1')
    for useragent in useragents:
        environment = Environment(service=service, matching_regex='some random string')
        db.save(Property(environment=environment, name='useragent', value=useragent))
        db.save(Property(environment=environment, name='uri', value='/'))
        db.save(environment)
        db.save(service)
    services.append(service)

    print("\t\tCreating HTTPS Service")
    service = Service(name='HTTPS', team=team, check_name='HTTPSCheck', ip_address='127.0.0.1')
    for useragent in useragents:
        environment = Environment(service=service, matching_regex='some random string')
        db.save(Property(environment=environment, name='useragent', value=useragent))
        db.save(Property(environment=environment, name='uri', value='/'))
        db.save(environment)
        db.save(service)
    services.append(service)

    print("\t\tCreating MYSQL Service")
    service = Service(name='MySQL', team=team, check_name='MYSQLCheck', ip_address='127.0.0.1')
    db.save(Account(username='techy', password='techy', service=service))
    db.save(Account(username='pwnbus', password='redfred', service=service))
    db.save(Account(username='rusty', password='catdog', service=service))
    environment = Environment(service=service, matching_regex='users')
    db.save(Property(environment=environment, name='database', value='wordpress'))
    db.save(Property(environment=environment, name='command', value='show tables;'))
    db.save(service)
    db.save(environment)
    services.append(service)


print("Creating " + str(num_rounds) + " rounds")
for num_round in range(1, num_rounds + 1):
    print("\tCreating round " + str(num_round))
    round_obj = Round(number=num_round)
    for service in services:
        print("\t\tCreating check for " + str(service.id))
        output = ""
        if randint(0, 1) == 1:
            result = True
            reason = 'Successful Content Match'
            output = "Some random output of a command"
        else:
            result = False
            output = "Errored output"
            if randint(0, 1) == 1:
                reason = 'Job Timed Out'
            else:
                reason = 'Unsuccessful Content Match'

        command = 'ping -c 1 127.0.0.1'
        check = Check(round=round_obj, service=service)
        check.finished(result, reason, output, command)
        db.save(check)
